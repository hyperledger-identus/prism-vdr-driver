name: CI
run-name: CI on ${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      make_snapshot_release:
        description: "Publish libraries's SNAPSHOT"
        default: false
        type: boolean
        required: false
  pull_request:
    branches-ignore:
      - "gh-pages"
  push:
    branches: [master, main]
    tags: ["v*"]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      # https://github.com/japgolly/setup-everything-scala
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for the release tag // `git fetch --tags` will also work
      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17.0 # adopt@1.11 # zulu@1.17.0-0 # openjdk@1.17.0
      - name: Cache sbt
        uses: coursier/cache-action@v6.4
      - name: Scalafmt
        continue-on-error: true
        run: sbt -v scalafmtCheckAll
      - name: Compile
        run: sbt -v compile
      - name: Test
        run: sbt -v test

  publish:
    name: Publish Artifacts
    needs: build-test
    runs-on: ubuntu-latest
    if: ((inputs.make_snapshot_release == true) && ((github.ref_name == 'master') || (github.ref_name == 'main')) || startsWith(github.ref, 'refs/tags/v'))
    steps:
      # https://github.com/japgolly/setup-everything-scala
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for the release tag // `git fetch --tags` will also work
      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: openjdk@1.17.0
      - name: Cache sbt
        uses: coursier/cache-action@v6.4
      
      - id: gpg-private-base64
        name: Convert key format to base64
        run: echo "HYP_BOT_GPG_PRIVATE_BASE64=$(echo -n '${{ secrets.HYP_BOT_GPG_PRIVATE }}' | base64 -w 0)" >> "$GITHUB_OUTPUT"

      ### Publish Artifacts ###
      - name: publish
        run: sbt ci-release
        env:
          # NODE_OPTIONS: "--openssl-legacy-provider" # This is need after node-version "16"
          # CI_RELEASE: the command to publish all artifacts for stable releases. Defaults to +publishSigned if not provided.
          PGP_PASSPHRASE: ${{ secrets.HYP_BOT_GPG_PASSWORD }}
          PGP_SECRET: ${{ steps.gpg-private-base64.outputs.HYP_BOT_GPG_PRIVATE_BASE64 }}
          SONATYPE_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          PACKAGES_GITHUB_TOKEN: ${{ secrets.PACKAGES_GITHUB_TOKEN }}
